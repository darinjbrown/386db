-- MySQL dump 10.13  Distrib 8.0.11, for macos10.13 (x86_64)
--
-- Host: localhost    Database: advising
-- ------------------------------------------------------
-- Server version	8.0.11

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
 SET NAMES utf8mb4 ;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `course_catalog`
--

DROP TABLE IF EXISTS `course_catalog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `course_catalog` (
  `acad_group` varchar(2) CHARACTER SET latin1 NOT NULL,
  `subject` varchar(8) CHARACTER SET latin1 NOT NULL,
  `catalog` varchar(8) CHARACTER SET latin1 NOT NULL,
  `course_title_long` varchar(256) CHARACTER SET latin1 NOT NULL,
  `catalog_description` varchar(4096) CHARACTER SET latin1 NOT NULL,
  `grading_mode` varchar(20) CHARACTER SET latin1 NOT NULL,
  `min_units` varchar(5) CHARACTER SET latin1 NOT NULL,
  `max_units` varchar(5) CHARACTER SET latin1 NOT NULL,
  `effective_date` date DEFAULT NULL,
  `req_group` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `perm_catalog_requisite` varchar(2048) CHARACTER SET latin1 DEFAULT NULL,
  `course_repeatable` varchar(1) CHARACTER SET latin1 DEFAULT NULL,
  `units_repeat_limit` smallint(5) unsigned DEFAULT NULL,
  `course_repeat_limit` smallint(5) unsigned DEFAULT NULL,
  `typical_offering` varchar(100) CHARACTER SET latin1 DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_catalog`
--

LOCK TABLES `course_catalog` WRITE;
/*!40000 ALTER TABLE `course_catalog` DISABLE KEYS */;
INSERT INTO `course_catalog` VALUES ('65','CS','101','Introduction to Computers and Computing','Lecture, 2 hours; laboratory, 2 hours. This course is an introduction to the concepts, techniques, uses, applications, and terminology of computers, computing, and networking. Emphasis is on the possibilities and limitations of computers and computing in a wide range of personal, commercial, and organizational activities. Topics include computer types, history of computing, computer organization and operation, computer languages, program development, computer applications (word processing, database, graphics, spreadsheets, etc.), basic networking, and computers in society. Weekly hands-on experience with a variety of operating systems, applications, and computer programming. Not applicable to the CS major. Recommended for all students. Satisfies GE Area B3.','OPT','3','3','2015-08-25','','','N',3,1,'Fall & Spring'),('65','CS','115','Programming I','Lecture, 3 hours; laboratory, 3 hours. This course gives an overview of computer organization; arithmetic and logical expressions, decision and iteration, simple I/O; subprograms; principles of good programming style, readability, documentation, structured programming concepts; top-down design and refinements; techniques of debugging and testing. Use of the above concepts will be implemented in a standard high-level programming language. Satisfies GE Area B3. Prerequisite: GE math and English eligibility, or consent of instructor.','OPT','4','4','2016-08-23','001113','Students need to be GE ready in math and English.','N',4,1,'Fall & Spring'),('65','CS','115W','Programming I Workshop','A workshop designed to be taken with CS 115. Exploration of programming concepts through problem solving in a group setting. Co-requisite: CS 115.','CNC','1','1','2015-08-25','001114','Concurrent Enrollment in CS 115 required.','N',1,1,'Fall & Spring'),('65','CS','175','Introduction to Computer Graphics','Lecture, 2 hours; laboratory, 2 hours. This is the first course in computer graphics hardware and software. Topics include graphics hardware, microcomputer graphics, presentation and business graphics, graphics for artists, computer mapping, CAD/CAM (drafting and environmental applications), animation, 3-dimensional graphics, and desktop publishing. Students will have hands-on experience using a variety of graphics programs on microcomputers. Not applicable to the CS major. Prerequisite: previous computer courses or consent of instructor.','OPT','3','3','2015-08-25','','','N',3,1,'Fall & Spring'),('65','CS','185','Special Topics in Computer Science','Content will be indicated by the specific topic. Prerequisite: consent of instructor.','GRD','1','4','2015-08-25','','','N',4,1,'Fall & Spring'),('65','CS','210','Introduction to Unix','Laboratory, 3 hours. This course is an introduction to the use of Linux/Unix as a programming environment. Communicating with a Linux host, shells and shell commands, files and directories, Gnome desktop, jobs and processes, scripting, programming utilities (compiler, linker, debugger, make, hex dump, etc.). Prerequisites: Grade of C- or better in CS 115 and previous or concurrent enrollment in CS 215, or consent of instructor.','GRD','1','1','2016-08-22','001115','Prerequisite:  Grade of C- or better in CS 115. You have to either have taken CS 215 previously or enroll in it concurrently with CS 210. Otherwise, you will be dropped from this course without notice.','N',1,1,'Fall & Spring'),('65','CS','215','Programming II','Lecture, 3 hours; laboratory, 3 hours. This course is the sequel to CS 115. Topics include: pointers and dynamic allocation of storage, linked lists, an introduction to the object oriented programming (OOP) paradigm, classes and objects, encapsulation, member variables and member functions, inheritance and polymorphism, scoping, templates, iterators, and error handling techniques. Prerequisites: Grade of C- or better in CS 115 and previous or concurrent enrollment in CS 210, or consent of instructor.','GRD','4','4','2016-08-22','001116','Prerequisite:  Grade of C- or better in CS 115. You have to either have taken CS 210 previously or enroll in it concurrently with CS 215. Otherwise, you will be dropped from this course without notice.','N',4,1,'Fall & Spring'),('65','CS','242','Discrete Structures for Computer Science','Lecture, 4 hours. This course covers fundamental mathematical concepts blended with their applications in Computer Science. Topics include: sets, functions and relations, Boolean algebra, normal forms., Karnaugh map and other minimization techniques, predicate logic, formal and informal proof techniques, relational algebra, basic counting techniques, recurrence relations, and an introduction to graph theory. Prerequisites: Grade of C- or better in CS 115 and MATH 161, or consent of instructor.','GRD','4','4','2018-08-20','001117','Prerequisite:  Grade of C- or better in Math 161 and CS 115.','N',4,1,'Fall & Spring'),('65','CS','252','Introduction to Computer Organization','Lecture, 3 hours; laboratory 3 hours. This course looks at the interface between computer hardware and software by introducing computer architecture and low-level programming. Topics to be covered include: data representations, digital logic, combinational and sequential circuits, computer system organization from the machine language point of view, and assembly language implementation of high-level constructs. Prerequisites: Grade of C- or better in CS 215 and CS 242, or consent of instructor.','GRD','4','4','2016-08-22','001118','Prerequisite:  Grade of C- or better in CS 215 and CS 242.','Y',4,1,'Fall & Spring'),('65','CS','285','Selected Topics in Computer Science','This lower-division course may be repeated with different subject matter. Content will be indicated by the specific topic. Prerequisite: as indicated in the specific topic description or consent of instructor.','OPT','1','4','2015-08-25','','','Y',99,99,'Fall & Spring'),('65','CS','315','Data Structures','Lecture, 3 hours; laboratory, 3 hours. This course introduces the concept of the organization of data into different structures to support the efficient implementation of computer algorithms. The emphasis of the course is on the internal representation of the elementary and intermediate data structures, their time and space requirements, and their applications. A second component of the course is the study of more advanced features of object-oriented programming. Prerequisite: Grade of C- or better in CS 210, CS 215, and CS 242, or consent of instructor.','GRD','4','4','2016-08-22','001119','Prerequisites:  Grade of C- or better in CS 210, CS 215 and CS 242.','N',4,1,'Fall & Spring'),('65','CS','330','Introduction to Game Programming','Lecture, 2 hours; laboratory, 2 hours. This course is an introduction to the theory and practice of video game design and programming. Video games combine, in real-time, concepts in computer graphics, human-computer interaction, networking, artificial intelligence, computer aided instruction, computer architecture, and databases. This course introduces students to a variety of game engines and frameworks and explores artificially intelligent agents. Students will work as part of a team to create a complete description document for a computer game and implement a prototype of the game. Prerequisite: Grade of C- or better in CS 315 or instructor consent.','GRD','3','3','2016-08-22','001099','Prerequisite:  Grade of C- or better in CS 315 or instructor consent.','N',3,1,'Fall & Spring'),('65','CS','340','Computer Security and Malware','Lecture, 2 hours; laboratory, 2 hours. Current methods for increasing security, protecting privacy, and guaranteeing degrees of confidentiality of computer records; ensuring computer installation safety; protecting software products; preventing and dealing with crime; value systems, ethics, and human factors affecting use and misuse of computers. Discussion of recent technical, legal, and sociopolitical issues influencing computer security problems, with an emphasis on malware. Prerequisites:Grade of C- or better in CS 215 and CS 252, or consent of instructor.','GRD','3','3','2016-08-22','001120','Prequisites:  Grade of C- or better in CS 215 and CS 252.','N',3,1,'Fall & Spring'),('65','CS','349','Problem Solving in a Team Environment','Laboratory, 2 hours. This course focuses on problem solving and program development in a team programming environment. Topics include: techniques for problem analysis and algorithm design, rapid implementation and pair programming methods, use of standard container classes and library functions. Different types of problems will be selected each semester. May be repeated for credit. A maximum of 3 units can be applied to the Computer Science major. Prerequisite: Grade of C- or better in CS 315 or consent of instructor. SSU students taking this course participate in regional and national programming competitions.','GRD','1','1','2016-08-22','000678','Course Prerequisite: Grade of C- or better in CS 315 required.','Y',99,99,'Fall & Spring'),('65','CS','351','Computer Architecture','Lecture, 4 hours. This course is the sequel to CS 252 and includes the following topics: instruction set design; stages of instruction execution: data, and control path design; pipelining; program optimization techniques; memory hierarchy; cache models and design issues; virtual memory and secondary storage; I/O interfacing. Advanced topics to include some of the following: parallel architectures, DSP or other special purpose architecture, FPGA, reconfigurable architecture, and asynchronous circuit design. Prerequisites: Grade of C- or better in CS 215 and CS 252, or consent of instructor.','GRD','4','4','2016-08-22','001120','Prequisites:  Grade of C- or better in CS 215 and CS 252.','N',4,1,'Fall & Spring'),('65','CS','355','Database Management Systems Design','Lecture, 4 hours. This course focuses on the theoretical as well as the practical aspects of modern database systems.Topics include the study of the entity-relationship (E/R) model, relational algebra, data normalization, XML as a semi-structured data model, data integrity, and database administration. Current tools and technologies are used to create and manipulate sample databases. Prerequisite: Grade of C- or better in CS 215 or consent of instructor.','GRD','4','4','2016-08-22','001121','Prerequisite: Grade of C- or better in CS 215.','N',4,1,'Fall & Spring'),('65','CS','360','Object-Oriented Programming','Lecture, 2 hours; laboratory, 3 hours. Principles of object-oriented programming, including encapsulation, inheritance, polymorphism, and design patterns. Specific applications are developed in one or more object-oriented programming languages and will cover the use of application frameworks and graphical user interfaces based on object-oriented principles. Prerequisites: Grade of C- or better in CS 315, or consent of instructor.','GRD','3','3','2018-08-20','001547','Prerequisite: Grade of C- or better in CS 315.','N',3,1,'Fall & Spring'),('65','CS','365','Computer Networking and the Internet','Lecture, 2 hours; laboratory, 3 hours. This course introduces the theory and practice of computer networking, with coverage of key theories in data communication and how these theories relate to current practices and will drive future practices. Network hardware implementations of local area networks, wide area networks, telephone networks, and wireless networks are investigated. Network software implementations of switches and routers, peer-to-peer networking, and hosted applications are investigated with exercises in writing and debugging network protocols in the laboratory. Prerequisites: Grade of C- or better in CS 215 and CS 252, or consent of instructor.','GRD','3','3','2016-08-22','001120','Prequisites:  Grade of C- or better in CS 215 and CS 252.','N',3,1,'Fall & Spring'),('65','CS','370','Software Design and Development','Lecture, 4 hours. Techniques of software design and development. Software lifecycle, requirements, formal specification, metrics, design, functional and structural testing, rapid prototyping, complexity, version control, and team management. Software metrics, tools for component-based software development. Team-based, agile, and scrum methodologies emphasized. Prerequisite: Grade of C- or better in CS 215 or consent of instructor.','GRD','4','4','2016-08-22','001121','Prerequisite: Grade of C- or better in CS 215.','N',4,1,'Fall & Spring'),('65','CS','375','Computer Graphics','Lecture, 2 hours; Laboratory, 2 hours. An introduction to computer graphics. Survey of the fundamental algorithms and methodologies, including, but not limited to, polygon fill, line-drawing, antialiasing, geometric transformations, viewing and clipping, spline representation, occlusion and visible surface detection, illumination, texturing, color models, rendering, shaders, animation, and emerging techniques. Prerequisites: Grade of C- or better in CS 215 and MATH 161, or consent of instructor.','GRD','3','3','2018-08-20','001122','Prerequistes:  Grade of C- or better in CS 215 and Math 161.','N',3,1,'Fall & Spring'),('65','CS','380','ETS Major Field Test','The focus of this course is preparation for the Major Field Test in Computer Science. Students will review material in the basic knowledge areas of computer science including: discrete structures, programming, algorithms and complexity, systems, software engineering, and information management. The course will culminate with students taking the Major Field Test in Computer Science administered through Educational Testing Services. This course is intended for students whom have completed the majority of required coursework in the CS major and are within one semester of graduation.','CNC','1','1','2015-08-25','','','N',1,1,'Fall & Spring'),('65','CS','385','Selected Topics in Computer Science','This course may be repeated with different subject matter for credit in the CS major. Prerequisites: upper-division standing with consent of a CS advisor and consent of instructor.','OPT','1','4','2016-08-23','000090','Class open to Juniors and Seniors only','Y',99,99,'Fall & Spring'),('65','CS','386','Selected Topics in CS with Lab','Lecture, 2 hours; laboratory, 3 hours. This course may be repeated with different subject matter for credit in the CS major. Prerequisites: upper-division standing with consent of a CS advisor and consent of instructor.','GRD','3','3','2018-08-20','000090','Class open to Juniors and Seniors only','Y',99,99,'Fall & Spring'),('65','CS','390','Computer Science Colloquium','Series of lectures on current developments in computer science. May be repeated for credit; a maximum of 3 units can be applied to the CS major; students will be required to attend all presentations, take notes, and research each of these presentations. Contact the department for specific information. Cr/NC only.','CNC','1','1','2015-08-25','','','Y',99,99,'Fall & Spring'),('65','CS','395','Community Involvement Program','CIP involves students in basic community problems. The most common task for a CS student will be tutoring at a local school. Not applicable to the CS major. Prerequisites: CS 115 and consent of instructor.','CNC','1','4','2015-08-25','','','N',4,1,'Fall & Spring'),('65','CS','415','Algorithm Analysis','Lecture, 4 hours. This course provides a systematic approach to the design and analysis of algorithms with an emphasis on efficiency. Topics include algorithms for searching and sorting, hashing, exploring graphs, and integer and polynomial arithmetic. Foundations in recurrence relations, combinatorics, probability, and graph theory as used in algorithm analysis are covered. Standard design techniques such as divide-and-conquer, greedy method, dynamic programming, heuristics, and probabilistic algorithms along with NP-completeness and approximation algorithms are included. Prerequisite: Grade of C- or better in CS 315, or consent of instructor.','GRD','4','4','2016-08-22','001123','Prerequisite:  Grade of C- or better in CS 315.','N',4,1,'Fall & Spring'),('65','CS','425','Parallel Computing','Lecture, 3 hours. Overview of parallel patterns, programming models, and hardware. Topics include parallel performance analysis; types of parallelism; parallel decomposition of tasks; shared vs. distributed memory; synchronization; hands-on experience with multiple parallel programming models; and architectural support for parallelism. Prerequisites: Grade of C- or better in CS 252 and CS 315, or consent of instructor.','GRD','3','3','2016-08-22','001900','Prerequisites: Grade of C- or better in CS 252 and CS 315, or consent of instructor.','N',3,1,'Fall & Spring'),('65','CS','450','Operating Systems','Lecture, 4 hours. This course covers the fundamental concepts of operating system design and implementation; the study of problems, goals, and methods of concurrent programming; and the fundamentals of systems programming. Topics include resource-management, process and thread scheduling algorithms, inter-process communication, I/O subsystems and device-drivers, memory management including virtual memory, segmentation, and page-replacement policies. These topics will be covered in theory and in practice through the study of the source-code of a working operating system. Prerequisites: Grade of C- or better in CS 252 and CS 315, or consent of instructor.','GRD','4','4','2016-08-22','001124','Prerequisites:  Grade of C- or better in CS 252 and CS 315.','N',4,1,'Fall & Spring'),('65','CS','452','Compiler Design and Construction','Lecture, 2 hours; laboratory, 2 hours. Application of language and automata theory to the design and construction of compilers. Lexical scanning, top-down and bottom-up parsing; semantic analysis, code generation; optimization. Design and construction of parts of a simple compiler using compiler generation tools. Prerequisites: Grade of C- or better in CS 315 and 252, or consent of instructor.','GRD','3','3','2016-08-22','001124','Prerequisites:  Grade of C- or better in CS 252 and CS 315.','N',3,1,'Fall & Spring'),('65','CS','454','Theory of Computation','Lecture, 4 hours. Overview of various kinds of computability, unsolvability, and decidability. The P versus NP problem. Abstract mathematical models of computing devices and language specification systems with focus on regular and context-free languages. Classification of computer-solvable problems. Prerequisite: Grade of C- or better in CS 315, or consent of instructor.','GRD','4','4','2016-08-22','001123','Prerequisite:  Grade of C- or better in CS 315.','N',4,1,'Fall & Spring'),('65','CS','460','Programming Languages','Lecture, 4 hours. This course provides a survey of the syntactic, semantic, and implementation features of functional, procedural, object-oriented, logic, and concurrent programming languages. Prerequisites: Grade of C- or better in CS 252 and CS 315, or consent of instructor.','GRD','4','4','2016-08-22','001124','Prerequisites:  Grade of C- or better in CS 252 and CS 315.','N',4,1,'Fall & Spring'),('65','CS','465','Data Communications','Lecture, 2 hours; laboratory, 3 hours. The ISO reference model, theoretical basis for data communications, data transmission theory and practice, telephone systems, protocols, networks, internetworks, with examples. Prerequisite: Grade of C- or better in CS 365, or consent of instructor.','GRD','3','3','2016-08-23','001998','Prerequisite: CS 365, or consent of instructor.','N',3,1,'Fall & Spring'),('65','CS','470','Advanced Software Design Project','Lecture, 3 hours. This course is a project-based course designed to provide a \"real world, team oriented\" capstone experience for Computer Science majors. Coursework will be organized around large programming projects. The content of the projects may vary depending on the interests of the instructor and may include industry, government, nonprofit organization, or other affiliations. Prerequisites: Grade of C- or better in CS 315, CS 370, and senior-standing in the major; or consent of instructor.','GRD','3','3','2018-08-20','001132','Prerequisite: Grade of C- or better in CS 315 and CS 370 required.','N',3,1,'Fall & Spring'),('65','CS','480','Artificial Intelligence','Lecture, 3 hours. This course is a survey of techniques that simulate human intelligence. Topics may include: pattern recognition, general problem solving, adversarial game-tree search, decision-making, expert systems, neural networks, fuzzy logic, and genetic algorithms. Prerequisite: Grade of C- or better in CS 315 or consent of instructor.','GRD','3','3','2016-08-22','001914','Prerequisite: Grade of C- or better in CS 315.','N',3,1,'Fall & Spring'),('65','CS','495','Special Studies','This course is intended for students who are doing advanced work in an area of computer science (e.g., a senior project). Prerequisites: an upper-division CS course in the area of interest and consent of instructor. May be repeated for credit.','OPT','1','4','2015-08-25','','','Y',99,99,'Fall & Spring'),('65','CS','496','Senior Research Project','Students, under the direction of one or more faculty members, undertake a substantial research project that is based on multiple upper-division CS courses. The result of the research is presented by the students in one of the Colloquium (CS 390) meetings. Senior-standing and approved contract are required.','GRD','3','3','2016-08-23','001159','Prerequisite: Senior Standing or consent of instructor.','N',3,1,'Fall & Spring'),('65','CS','497','Internship','Student projects conceived and designed in conjunction with an off-campus organization or group. The internship is intended to provide on-the-job experience in an area of computer science in which the student has no prior on-the-job experience. Computer hardware or computer time required for the internship, as well as regular supervision of the intern, must be provided by the off-campus organization. Prerequisite: student must be within 30 units of completion of the CS major. May be taken Cr/NC only. No more than 3 units can be applied to the CS major. Course may be repeated for credit.','CNC','1','3','2017-08-21','','','Y',99,99,'Fall & Spring');
/*!40000 ALTER TABLE `course_catalog` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-02-04 22:19:48
